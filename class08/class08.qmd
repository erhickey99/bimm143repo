---
title: "Class 8: Mini Project"
author: "Emily Hickey (PID: A15575724)"
format: html
---

## Outline
Today we will apply the machine learning methods we introduced in the last class on breast cancer biopsy data from file needed aspiration (FNA).

## Data input
The data is supplied on CSV format:

```{r}
wisc.df <- read.csv("WisconsinCancer.csv")
head(wisc.df)
```

```{r}
#Save yout input data file into your Project Directory 
fna.data <- "WisconsinCancer.csv"
```

#Complete the following code to input the data and store as wisc.df

```{r}
#Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```

#We can use -1 here to remove this first column

```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

```{r}
#Create diagnosis vector for later
diagnosis <- as.factor(wisc.df[,1])
```

>Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

>Q2. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)
```

```{r}
sum(wisc.df$diagnosis == "M")
```

>Q3. How many variables/features in the data are suffixed with _mean?

```{r}
x <- colnames(wisc.df)
length(grep("_mean", x))
```

#Check column means and standard deviations

```{r}
colMeans(wisc.data)
apply(wisc.data, 2, sd)
```

We need to scale out input data before PCA as some of the columns are measured in terms of very different units with different means and different variances. The upshot here is we set `scale=TRUE` argument to `prcomp()`.

#Perform PCA on wisc.data by completing the following code

```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
```

#Look at summary results

```{r}
summary(wisc.pr)
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col= diagnosis)
```


>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

0.4427

>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7

## Interpreting PCA Results

>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

```{r}
biplot(wisc.pr)
```
This plot is messy and difficult to read. All the row and column names are present on the graph and we cannot see specific points. 

#Scatter plot observations by components 1 and 2

```{r}
plot( wisc.pr$x, col = diagnosis , 
     xlab = "PC1", ylab = "PC2")
```

>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[, 1], wisc.pr$x[,3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```

The plots show 2 separate clusters while also demonstrating where there is some overlap between the 2 components.

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
```

```{r}
# Load the ggplot2 package
library(ggplot2)
```

```{r}
# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

## Variance Explained

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <-pr.var / sum(pr.var)
```

```{r}
# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

## Communicating PCA results

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation[,1]
```

   -0.26085376

>Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
summary(wisc.pr)
```
It would take 5 principal components. We can see that PC5 gives 84% variance. 

## Hierarchial Clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist,method="complete")
```

#Results of hierarchial clustering

>Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

h=19

## Selecting number of clusters

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
head(wisc.hclust.clusters)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```

>Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? 

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=8)
table(wisc.hclust.clusters, diagnosis)
```

Potentially. When k=8, we can see that centroid 4 provides a significant amount of points for benign tumors, making it a good cluster.

## Using different methods

> Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

Method="ward.D2" because it minimizes variance, making the clusters easier to differentiate.

## Combining methods

This approach will take not original data but our PCA results and work with them.

```{r}
d <- dist(wisc.pr$x [,1:7])
wisc.pr.hclust <- hclust(d, method= "ward.D2")
plot(wisc.pr.hclust)
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
# Compare to actual diagnoses
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)
```

The newly created model with the 2 clusters fails to consider the possible false positives for both the benign and malignant group, since it only evaluates 2 clusters when there are more to be considered in this data set.

## Sensitivity/Specificity

>Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

The best specificity was for the cluster dendogram of wisc.pr.hclust. The best sensitivity was for plot(wisc.pr$x[,1:2], col=diagnosis) or the most recent graph above.

## Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
g <- as.factor(grps)
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

>Q18. Which of these new patients should we prioritize for follow up based on your results?

Patient 2.